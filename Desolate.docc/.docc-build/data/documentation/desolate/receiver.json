{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Receiver"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ReceivedType"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"aside","style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Receiver should not and aren’t allowed to be instantiated on own its own."}]}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To make a Receiver, you are required to create a class that inherits and override all the methods"}]}],"type":"aside","name":"Attention"},{"anchor":"Multiple-responses","level":4,"type":"heading","text":"Multiple responses"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Receiver aren’t setup with receiving multiple values in mind. While that’s possible for custom implementation, built-in receivers are going to override the values if it were to given more than once."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Receiver also doesn’t offer any guarantee for Ask Pattern that the last given value will be the result given back"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On the other end when making a receiver, it’s best to keep it idempotent."}]}]}]},{"anchor":"Making-Receiver","level":3,"type":"heading","text":"Making Receiver"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a Desolate "},{"type":"codeVoice","code":".ref"}]}]}]},{"type":"codeListing","syntax":"swift","code":["actor MyActor: AbstractDesolate, NonStop {","    typealias MessageType = Int","    ...","}","","let actor = MyActor.new()","let receiver: Receiver<Int> = actor.ref"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Inherit and Override with a custom class"}]}]}]},{"type":"codeListing","syntax":"swift","code":["class MyLogger: Receiver<String> {","    init() {}","","    override func tell(with msg: String) {","        print(msg)","    }","    override func task(with msg: String) async {","        print(msg)","    }","}","","let receiver: Receiver<String> = MyLogger()"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/desolate\/receiver"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/io.github.d-exclaimation.Desolate\/documentation\/Desolate\/Receiver","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Receiver class is any class that can given a value of a certain type with similar API to a Desolate, usually used for a request-response within Desolate used in something like "},{"type":"codeVoice","code":"AskPattern"},{"type":"text","text":" with "},{"type":"codeVoice","code":".ask"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Receiver"}],"title":"Receiver","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:8Desolate8ReceiverC","modules":[{"name":"Desolate"}],"navigatorTitle":[{"kind":"identifier","text":"Receiver"}]},"hierarchy":{"paths":[["doc:\/\/io.github.d-exclaimation.Desolate\/documentation\/Desolate"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/io.github.d-exclaimation.Desolate\/documentation\/Desolate\/Receiver\/task(with:)","doc:\/\/io.github.d-exclaimation.Desolate\/documentation\/Desolate\/Receiver\/tell(with:)"]}],"references":{"doc://io.github.d-exclaimation.Desolate/documentation/Desolate/Receiver/task(with:)":{"role":"symbol","title":"task(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"task"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ReceivedType"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Asynchronously send a response message to the Actor referenced by this Receiver,"},{"type":"text","text":" "},{"type":"text","text":"which allow awaiting the receiver to successful received and handle the response before moving one"}],"identifier":"doc:\/\/io.github.d-exclaimation.Desolate\/documentation\/Desolate\/Receiver\/task(with:)","kind":"symbol","type":"topic","url":"\/documentation\/desolate\/receiver\/task(with:)"},"doc://io.github.d-exclaimation.Desolate/documentation/Desolate/Receiver":{"role":"symbol","title":"Receiver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Receiver"}],"abstract":[{"type":"text","text":"Receiver class is any class that can given a value of a certain type with similar API to a Desolate, usually used for a request-response within Desolate used in something like "},{"type":"codeVoice","code":"AskPattern"},{"type":"text","text":" with "},{"type":"codeVoice","code":".ask"},{"type":"text","text":"."}],"identifier":"doc:\/\/io.github.d-exclaimation.Desolate\/documentation\/Desolate\/Receiver","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Receiver"}],"url":"\/documentation\/desolate\/receiver"},"doc://io.github.d-exclaimation.Desolate/documentation/Desolate/Receiver/tell(with:)":{"role":"symbol","title":"tell(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tell"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ReceivedType"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Send a response message to the Actor referenced by this Receiver"}],"identifier":"doc:\/\/io.github.d-exclaimation.Desolate\/documentation\/Desolate\/Receiver\/tell(with:)","kind":"symbol","type":"topic","url":"\/documentation\/desolate\/receiver\/tell(with:)"},"doc://io.github.d-exclaimation.Desolate/documentation/Desolate":{"role":"collection","title":"Desolate","abstract":[],"identifier":"doc:\/\/io.github.d-exclaimation.Desolate\/documentation\/Desolate","kind":"symbol","type":"topic","url":"\/documentation\/desolate"}}}